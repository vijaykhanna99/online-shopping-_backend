# Generated by Django 4.2.4 on 2024-03-26 05:36

import api.models.UserModel
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", api.models.UserModel.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="addresses",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("street", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=10)),
                ("country", models.CharField(max_length=100)),
                ("phone_number", models.CharField(max_length=10)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="background",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("thumbnail", models.URLField(blank=True, max_length=500, null=True)),
                ("model", models.FileField(upload_to="backgrounds/")),
            ],
            options={
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=25)),
                ("logo", models.URLField(blank=True, max_length=500, null=True)),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="categories",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Headwear", "Headwear"),
                            ("Topwear", "Topwear"),
                            ("Bottomwear", "Bottomwear"),
                            ("Footwear", "Footwear"),
                            ("One Piece", "One Piece"),
                            ("Accessories", "Accessories"),
                        ],
                        default="One Piece",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "total_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.addresses",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="products",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("label", models.CharField(blank=True, max_length=25, null=True)),
                ("actual_price", models.IntegerField()),
                ("sold_price", models.IntegerField()),
                ("img_url", models.URLField(max_length=500)),
                (
                    "video",
                    models.FileField(
                        blank=True, null=True, upload_to="videos_uploaded/"
                    ),
                ),
                ("currency", models.CharField(max_length=4)),
                ("color", models.CharField(max_length=20)),
                ("enable_product", models.BooleanField(default=True)),
                (
                    "stock_status",
                    models.CharField(
                        choices=[
                            ("In stock", "In stock"),
                            ("Out of stock", "Out of stock"),
                        ],
                        default="In stock",
                        max_length=20,
                    ),
                ),
                (
                    "size_range",
                    models.CharField(
                        choices=[
                            ("Small", "Small"),
                            ("Medium", "Medium"),
                            ("Large", "Large"),
                            ("XL", "Extra Large"),
                            ("XXL", "Double Extra Large"),
                        ],
                        default="Medium",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("deleted_at", models.DateField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.categories",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="user_profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("Male", "Male"), ("Female", "Female")],
                        default="Male",
                        max_length=20,
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile-pictures/"
                    ),
                ),
                ("country_code", models.CharField(max_length=5, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("phone_number", models.CharField(max_length=20, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("phone_is_verified", models.BooleanField(default=False)),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.addresses",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "user profile",
            },
        ),
        migrations.CreateModel(
            name="user_measurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("height", models.FloatField(blank=True, null=True)),
                ("shoulder", models.FloatField(blank=True, null=True)),
                ("back_width", models.FloatField(blank=True, null=True)),
                ("sleeve", models.FloatField(blank=True, null=True)),
                ("waist", models.FloatField(blank=True, null=True)),
                ("chest", models.FloatField(blank=True, null=True)),
                ("neck", models.FloatField(blank=True, null=True)),
                ("waist_to_hip", models.FloatField(blank=True, null=True)),
                ("hip", models.FloatField(blank=True, null=True)),
                ("shoulder_to_waist", models.FloatField(blank=True, null=True)),
                ("front_chest", models.FloatField(blank=True, null=True)),
                ("inside_leg", models.FloatField(blank=True, null=True)),
                ("outside_leg", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="user_feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("overall_experience", models.IntegerField(blank=True, null=True)),
                (
                    "input_feedback",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("scan_feedback", models.IntegerField(blank=True, null=True)),
                ("fit_satisfaction", models.IntegerField(blank=True, null=True)),
                ("app_rating", models.IntegerField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="uploads",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("media_file_url", models.CharField(blank=True, max_length=255)),
                ("media_file_name", models.CharField(max_length=250)),
                (
                    "thumbnail",
                    models.ImageField(blank=True, null=True, upload_to="upload-media/"),
                ),
                (
                    "media_file_type",
                    models.CharField(blank=True, max_length=120, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.products",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "upload",
            },
        ),
        migrations.CreateModel(
            name="retailers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.addresses"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="product_clo_3d",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "m_small_s",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_small_m",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_small_l",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_small_xl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_small_xxl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_medium_s",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_medium_m",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_medium_l",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_medium_xl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_medium_xxl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_large_s",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_large_m",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_large_l",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_large_xl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_large_xxl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_xlarge_s",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_xlarge_m",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_xlarge_l",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_xlarge_xl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_xlarge_xxl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_xxlarge_s",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_xxlarge_m",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_xxlarge_l",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_xxlarge_xl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "m_xxlarge_xxl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_small_s",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_small_m",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_small_l",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_small_xl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_small_xxl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_medium_s",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_medium_m",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_medium_l",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_medium_xl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_medium_xxl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_large_s",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_large_m",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_large_l",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_large_xl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_large_xxl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_xlarge_s",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_xlarge_m",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_xlarge_l",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_xlarge_xl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_xlarge_xxl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_xxlarge_s",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_xxlarge_m",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_xxlarge_l",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_xxlarge_xl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "f_xxlarge_xxl",
                    models.FileField(blank=True, null=True, upload_to="clo_3d/"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.products"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PasswordResetToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OTP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.CharField(max_length=6, null=True)),
                ("created_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                (
                    "item_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "order_status",
                    models.CharField(
                        choices=[
                            ("Confirmed", "confirmed"),
                            ("Cancelled", "cancelled"),
                            ("Processing", "processing"),
                        ],
                        default="Processing",
                        max_length=20,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.order"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.products"
                    ),
                ),
            ],
        ),
    ]
